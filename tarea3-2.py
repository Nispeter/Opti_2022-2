from statistics import quantiles
from tkinter import N
import numpy as np
import pandas as pd
from scipy.spatial import distance_matrix
import matplotlib
import matplotlib.pylab as plt
from random import random
import seaborn as sns
import pulp
import warnings

warnings.filterwarnings("ignore")


def graficar(): 
    plt.figure(figsize = (8,8))
    plt.scatter(df['x'],df['y'], color = 'blue')
    plt.scatter(df['x'][0],df['y'][0], color = 'red', marker = 'D') 
    #colores aleatoreos para cada recorrido 
    colors = [(random(), random(), random()) for k in range(max_vehicle)]
    for k in range(max_vehicle):
        for i in range(n_points): 
            for j in range(n_points):   
                #asignacion para cada arco seleccionado en x
                if i != j and pulp.value(x[i,j,k]) == 1:
                    plt.plot([df['x'][i],df['x'][j]],[df['y'][i],df['y'][j]], color = colors[k], alpha = 0.4)
    plt.show()

#datos limpios de cada instancia puestos en un diccionario 
HOMBERGEa_C1_4_1 = {'v_num': 100, 'capacity': 200, 'nodes': [[0, 100, 100, 0, 0, 1501, 0], [1, 181, 172, 10, 348, 419, 90], [2, 154, 31, 10, 795, 860, 90], [3, 123, 106, 20, 747, 797, 90], [4, 23, 137, 20, 703, 763, 90], [5, 190, 28, 20, 115, 177, 90], [6, 8, 71, 10, 713, 783, 90], [7, 103, 130, 20, 369, 426, 90], [8, 62, 50, 20, 486, 555, 90], [9, 89, 161, 10, 309, 385, 90], [10, 117, 91, 20, 446, 513, 90], [11, 12, 156, 30, 540, 580, 90], [12, 88, 165, 30, 220, 286, 90], [13, 107, 125, 10, 657, 697, 90], [14, 8, 74, 20, 535, 595, 90], [15, 105, 125, 10, 746, 793, 90], [16, 118, 192, 30, 243, 309, 90], [17, 146, 11, 10, 100, 160, 90], [18, 93, 13, 30, 525, 595, 90], [19, 188, 125, 10, 426, 484, 90], [20, 87, 117, 10, 832, 881, 90], [21, 123, 31, 20, 682, 748, 90], [22, 121, 189, 20, 628, 688, 90], [23, 174, 128, 20, 79, 140, 90], [24, 197, 80, 10, 248, 313, 90], [25, 151, 165, 10, 630, 688, 90], [26, 140, 4, 10, 428, 505, 90], [27, 78, 184, 20, 993, 1055, 90], [28, 96, 150, 20, 765, 834, 90], [29, 96, 147, 10, 188, 271, 90], [30, 149, 182, 20, 724, 773, 90], [31, 87, 191, 10, 152, 218, 90], [32, 189, 151, 30, 159, 227, 90], [33, 99, 144, 10, 44, 102, 90], [34, 64, 52, 20, 865, 926, 90], [35, 7, 151, 20, 808, 867, 90], [36, 151, 99, 10, 377, 448, 90], [37, 87, 118, 10, 743, 789, 90], [38, 179, 141, 20, 251, 296, 90], [39, 192, 151, 10, 348, 413, 90], [40, 143, 0, 10, 809, 863, 90], [41, 66, 58, 20, 1145, 1203, 90], [42, 122, 14, 20, 1087, 1155, 90], [43, 66, 52, 10, 780, 828, 90], [44, 173, 55, 20, 150, 203, 90], [45, 119, 37, 20, 874, 931, 90], [46, 199, 28, 20, 637, 695, 90], [47, 90, 161, 10, 404, 472, 90], [48, 36, 193, 20, 633, 678, 90], [49, 159, 160, 20, 84, 140, 90], [50, 194, 112, 10, 613, 683, 90], [51, 176, 173, 20, 105, 168, 90], [52, 117, 193, 30, 151, 219, 90], [53, 186, 96, 20, 895, 955, 90], [54, 39, 56, 10, 129, 204, 90], [55, 189, 120, 10, 522, 578, 90], [56, 29, 139, 10, 81, 135, 90], [57, 37, 190, 10, 528, 598, 90], [58, 165, 117, 10, 513, 553, 90], [59, 16, 84, 20, 805, 852, 90], [60, 187, 97, 10, 811, 857, 90], [61, 10, 153, 20, 348, 404, 90], [62, 194, 149, 20, 254, 321, 90], [63, 187, 112, 30, 87, 137, 90], [64, 103, 70, 10, 176, 250, 90], [65, 193, 159, 20, 544, 597, 90], [66, 77, 115, 20, 359, 425, 90], [67, 190, 154, 30, 443, 506, 90], [68, 3, 75, 10, 445, 494, 90], [69, 17, 93, 20, 152, 202, 90], [70, 151, 167, 10, 337, 410, 90], [71, 12, 85, 10, 517, 580, 90], [72, 120, 11, 10, 143, 224, 90], [73, 140, 181, 20, 90, 140, 90], [74, 6, 67, 10, 251, 310, 90], [75, 137, 4, 10, 1091, 1146, 90], [76, 103, 124, 20, 821, 901, 90], [77, 10, 67, 30, 150, 224, 90], [78, 48, 30, 50, 239, 299, 90], [79, 53, 67, 20, 590, 650, 90], [80, 164, 113, 20, 65, 119, 90], [81, 47, 49, 20, 787, 849, 90], [82, 187, 92, 20, 337, 391, 90], [83, 121, 115, 20, 178, 234, 90], [84, 46, 51, 20, 969, 1031, 90], [85, 144, 189, 30, 341, 402, 90], [86, 180, 93, 10, 1072, 1151, 90], [87, 152, 168, 20, 260, 303, 90], [88, 117, 95, 10, 68, 149, 90], [89, 195, 25, 10, 906, 982, 90], [90, 108, 168, 20, 512, 569, 90], [91, 149, 103, 20, 753, 808, 90], [92, 60, 58, 20, 58, 102, 90], [93, 197, 79, 10, 333, 409, 90], [94, 39, 58, 30, 74, 131, 90], [95, 147, 186, 30, 625, 683, 90], [96, 154, 163, 10, 714, 792, 90], [97, 96, 128, 30, 28, 89, 90], [98, 30, 187, 10, 817, 884, 90], [99, 123, 121, 20, 456, 513, 90], [100, 104, 68, 10, 364, 430, 90], [101, 102, 128, 20, 281, 328, 90], [102, 18, 89, 10, 82, 136, 90], [103, 197, 77, 20, 709, 766, 90], [104, 156, 11, 20, 1190, 1240, 90], [105, 144, 33, 30, 80, 129, 90], [106, 101, 67, 20, 641, 702, 90], [107, 159, 121, 20, 786, 843, 90], [108, 84, 192, 10, 342, 393, 90], [109, 139, 7, 20, 242, 323, 90], [110, 7, 152, 10, 715, 779, 90], [111, 181, 147, 20, 445, 493, 90], [112, 104, 170, 20, 140, 182, 90], [113, 13, 81, 30, 610, 676, 90], [114, 172, 57, 10, 83, 140, 90], [115, 80, 108, 20, 86, 140, 90], [116, 180, 171, 20, 452, 498, 90], [117, 146, 3, 10, 439, 500, 90], [118, 123, 33, 20, 586, 660, 90], [119, 127, 8, 20, 904, 958, 90], [120, 185, 115, 20, 618, 675, 90], [121, 192, 113, 20, 248, 299, 90], [122, 194, 75, 10, 892, 952, 90], [123, 135, 0, 10, 988, 1060, 90], [124, 157, 30, 10, 709, 761, 90], [125, 53, 29, 30, 513, 593, 90], [126, 85, 110, 10, 18, 73, 90], [127, 182, 171, 30, 548, 587, 90], [128, 79, 193, 30, 892, 956, 90], [129, 181, 52, 10, 603, 674, 90], [130, 148, 103, 30, 835, 908, 90], [131, 190, 109, 10, 892, 955, 90], [132, 119, 188, 20, 807, 875, 90], [133, 197, 140, 10, 250, 326, 90], [134, 162, 123, 40, 693, 749, 90], [135, 102, 170, 40, 216, 290, 90], [136, 120, 198, 10, 427, 501, 90], [137, 175, 50, 20, 896, 951, 90], [138, 23, 142, 10, 522, 573, 90], [139, 149, 99, 20, 112, 167, 90], [140, 102, 174, 20, 310, 383, 90], [141, 30, 142, 10, 146, 202, 90], [142, 175, 143, 20, 988, 1047, 90], [143, 193, 27, 10, 449, 512, 90], [144, 193, 82, 10, 148, 223, 90], [145, 103, 67, 20, 463, 515, 90], [146, 55, 64, 30, 398, 463, 90], [147, 197, 25, 10, 732, 788, 90], [148, 42, 105, 20, 494, 552, 90], [149, 100, 129, 30, 180, 245, 90], [150, 120, 115, 20, 80, 151, 90], [151, 183, 120, 10, 152, 202, 90], [152, 115, 89, 20, 554, 591, 90], [153, 196, 27, 10, 822, 882, 90], [154, 131, 38, 20, 124, 194, 90], [155, 145, 31, 20, 143, 201, 90], [156, 196, 137, 20, 166, 223, 90], [157, 98, 150, 10, 295, 350, 90], [158, 159, 8, 10, 1095, 1146, 90], [159, 15, 88, 10, 335, 394, 90], [160, 191, 27, 10, 174, 239, 90], [161, 196, 111, 30, 522, 589, 90], [162, 150, 6, 20, 623, 686, 90], [163, 95, 74, 20, 928, 983, 90], [164, 42, 101, 10, 682, 732, 90], [165, 53, 59, 20, 221, 270, 90], [166, 193, 23, 20, 1008, 1067, 90], [167, 40, 105, 10, 396, 465, 90], [168, 152, 4, 20, 813, 865, 90], [169, 100, 151, 10, 476, 536, 90], [170, 24, 140, 20, 609, 670, 90], [171, 87, 195, 10, 525, 581, 90], [172, 140, 6, 30, 347, 401, 90], [173, 197, 113, 20, 435, 491, 90], [174, 40, 183, 20, 168, 216, 90], [175, 127, 114, 20, 638, 710, 90], [176, 182, 46, 10, 799, 851, 90], [177, 151, 190, 40, 523, 593, 90], [178, 8, 69, 20, 808, 872, 90], [179, 44, 52, 20, 316, 389, 90], [180, 43, 54, 10, 236, 285, 90], [181, 179, 174, 10, 165, 233, 90], [182, 13, 152, 20, 157, 225, 90], [183, 137, 1, 10, 913, 952, 90], [184, 127, 118, 20, 555, 604, 90], [185, 118, 92, 30, 365, 412, 90], [186, 129, 40, 20, 66, 154, 90], [187, 123, 4, 10, 717, 774, 90], [188, 55, 24, 10, 442, 475, 90], [189, 41, 182, 30, 101, 166, 90], [190, 22, 133, 10, 796, 858, 90], [191, 151, 101, 20, 472, 538, 90], [192, 82, 194, 10, 798, 865, 90], [193, 185, 124, 10, 332, 392, 90], [194, 180, 147, 10, 533, 587, 90], [195, 97, 7, 20, 340, 400, 90], [196, 108, 165, 10, 603, 665, 90], [197, 47, 50, 10, 891, 928, 90], [198, 93, 167, 40, 135, 181, 90], [199, 186, 91, 10, 242, 303, 90], [200, 124, 6, 20, 803, 872, 90], [201, 149, 167, 40, 537, 595, 90], [202, 125, 38, 30, 319, 371, 90], [203, 123, 8, 10, 252, 304, 90], [204, 199, 76, 30, 516, 593, 90], [205, 194, 129, 20, 714, 793, 90], [206, 124, 117, 30, 356, 425, 90], [207, 115, 4, 20, 617, 677, 90], [208, 105, 70, 10, 278, 333, 90], [209, 120, 92, 20, 274, 318, 90], [210, 200, 136, 20, 361, 405, 90], [211, 14, 84, 20, 704, 768, 90], [212, 100, 150, 10, 384, 445, 90], [213, 190, 112, 20, 148, 213, 90], [214, 146, 7, 10, 265, 304, 90], [215, 196, 28, 20, 540, 607, 90], [216, 100, 6, 30, 141, 227, 90], [217, 118, 97, 20, 169, 232, 90], [218, 12, 154, 10, 433, 503, 90], [219, 97, 162, 10, 672, 723, 90], [220, 196, 78, 30, 802, 854, 90], [221, 172, 114, 20, 229, 278, 90], [222, 14, 92, 30, 251, 290, 90], [223, 7, 142, 20, 914, 960, 90], [224, 63, 55, 10, 1046, 1115, 90], [225, 54, 30, 10, 612, 678, 90], [226, 141, 8, 20, 160, 222, 90], [227, 156, 12, 20, 1247, 1307, 90], [228, 134, 6, 20, 1186, 1238, 90], [229, 198, 78, 20, 432, 493, 90], [230, 65, 53, 10, 951, 1023, 90], [231, 52, 28, 10, 328, 399, 90], [232, 125, 15, 10, 997, 1060, 90], [233, 199, 115, 20, 336, 404, 90], [234, 32, 178, 10, 1002, 1085, 90], [235, 179, 55, 30, 337, 389, 90], [236, 11, 151, 20, 260, 307, 90], [237, 99, 154, 10, 575, 622, 90], [238, 95, 16, 20, 619, 689, 90], [239, 83, 197, 20, 703, 774, 90], [240, 27, 135, 10, 983, 1049, 90], [241, 102, 121, 10, 1016, 1074, 90], [242, 179, 165, 20, 729, 783, 90], [243, 87, 196, 30, 616, 673, 90], [244, 38, 190, 10, 435, 508, 90], [245, 183, 167, 10, 629, 694, 90], [246, 46, 49, 20, 695, 759, 90], [247, 149, 5, 10, 535, 591, 90], [248, 84, 194, 10, 437, 483, 90], [249, 93, 150, 10, 862, 922, 90], [250, 35, 186, 10, 920, 971, 90], [251, 177, 146, 10, 719, 768, 90], [252, 26, 147, 20, 246, 296, 90], [253, 21, 85, 20, 899, 947, 90], [254, 195, 97, 20, 623, 668, 90], [255, 99, 146, 10, 108, 165, 90], [256, 195, 129, 40, 635, 689, 90], [257, 105, 127, 10, 460, 521, 90], [258, 190, 24, 20, 1099, 1161, 90], [259, 178, 165, 30, 811, 883, 90], [260, 68, 50, 10, 681, 741, 90], [261, 190, 110, 20, 798, 866, 90], [262, 60, 51, 20, 305, 371, 90], [263, 180, 50, 20, 699, 763, 90], [264, 181, 151, 10, 829, 885, 90], [265, 143, 189, 10, 153, 224, 90], [266, 56, 59, 30, 125, 179, 90], [267, 48, 108, 20, 52, 106, 90], [268, 50, 67, 10, 497, 556, 90], [269, 101, 70, 20, 97, 146, 90], [270, 185, 123, 30, 247, 295, 90], [271, 38, 188, 20, 351, 409, 90], [272, 151, 28, 20, 428, 484, 90], [273, 121, 8, 10, 431, 488, 90], [274, 25, 143, 20, 423, 486, 90], [275, 26, 138, 10, 886, 960, 90], [276, 176, 144, 20, 893, 958, 90], [277, 78, 119, 30, 458, 515, 90], [278, 51, 31, 20, 141, 210, 90], [279, 109, 175, 20, 411, 477, 90], [280, 150, 98, 10, 207, 254, 90], [281, 180, 52, 10, 526, 570, 90], [282, 141, 4, 20, 615, 683, 90], [283, 152, 3, 20, 894, 966, 90], [284, 166, 117, 20, 318, 382, 90], [285, 93, 7, 20, 431, 497, 90], [286, 113, 94, 30, 14, 74, 90], [287, 83, 188, 30, 89, 141, 90], [288, 8, 73, 20, 632, 680, 90], [289, 154, 2, 20, 993, 1053, 90], [290, 17, 150, 20, 96, 163, 90], [291, 116, 189, 30, 90, 153, 90], [292, 140, 11, 10, 97, 139, 90], [293, 189, 97, 20, 715, 768, 90], [294, 184, 116, 20, 711, 764, 90], [295, 198, 76, 10, 619, 672, 90], [296, 186, 94, 20, 433, 479, 90], [297, 97, 65, 20, 735, 797, 90], [298, 154, 172, 30, 159, 215, 90], [299, 90, 160, 20, 495, 564, 90], [300, 109, 126, 10, 566, 604, 90], [301, 148, 98, 20, 48, 123, 90], [302, 144, 170, 10, 436, 505, 90], [303, 193, 83, 20, 94, 156, 90], [304, 15, 87, 20, 430, 481, 90], [305, 89, 158, 30, 601, 642, 90], [306, 153, 29, 20, 526, 571, 90], [307, 183, 152, 30, 730, 800, 90], [308, 53, 61, 20, 311, 364, 90], [309, 123, 36, 10, 501, 560, 90], [310, 59, 57, 10, 116, 185, 90], [311, 102, 122, 10, 920, 988, 90], [312, 45, 48, 10, 598, 674, 90], [313, 185, 96, 30, 981, 1050, 90], [314, 120, 192, 10, 335, 401, 90], [315, 165, 113, 10, 125, 187, 90], [316, 177, 145, 10, 800, 868, 90], [317, 126, 192, 10, 536, 588, 90], [318, 103, 66, 20, 541, 618, 90], [319, 69, 47, 10, 585, 650, 90], [320, 150, 3, 10, 724, 771, 90], [321, 110, 164, 20, 688, 764, 90], [322, 178, 123, 30, 81, 166, 90], [323, 53, 31, 10, 703, 769, 90], [324, 193, 131, 20, 98, 164, 90], [325, 83, 118, 20, 550, 614, 90], [326, 145, 9, 10, 161, 224, 90], [327, 12, 69, 10, 902, 965, 90], [328, 145, 189, 30, 437, 488, 90], [329, 97, 67, 10, 822, 894, 90], [330, 193, 28, 20, 369, 410, 90], [331, 79, 115, 30, 187, 234, 90], [332, 63, 58, 20, 55, 111, 90], [333, 187, 142, 10, 343, 399, 90], [334, 99, 12, 30, 88, 125, 90], [335, 181, 89, 10, 81, 151, 90], [336, 111, 93, 10, 636, 699, 90], [337, 192, 28, 30, 263, 333, 90], [338, 198, 132, 10, 540, 597, 90], [339, 57, 54, 20, 213, 275, 90], [340, 39, 112, 20, 213, 273, 90], [341, 118, 5, 20, 522, 586, 90], [342, 122, 37, 30, 410, 467, 90], [343, 100, 70, 30, 30, 75, 90], [344, 150, 103, 20, 659, 719, 90], [345, 28, 193, 30, 727, 781, 90], [346, 121, 36, 20, 785, 836, 90], [347, 152, 31, 10, 885, 954, 90], [348, 175, 57, 30, 237, 301, 90], [349, 149, 101, 20, 560, 633, 90], [350, 140, 3, 10, 526, 589, 90], [351, 165, 116, 10, 421, 462, 90], [352, 143, 5, 10, 711, 772, 90], [353, 153, 160, 40, 819, 873, 90], [354, 121, 116, 10, 266, 328, 90], [355, 147, 6, 10, 351, 401, 90], [356, 162, 118, 20, 595, 656, 90], [357, 12, 66, 20, 94, 159, 90], [358, 98, 4, 20, 237, 316, 90], [359, 189, 95, 10, 517, 581, 90], [360, 91, 160, 30, 60, 107, 90], [361, 147, 26, 30, 325, 398, 90], [362, 85, 192, 10, 245, 308, 90], [363, 178, 147, 10, 630, 675, 90], [364, 40, 113, 10, 120, 185, 90], [365, 122, 8, 20, 344, 393, 90], [366, 119, 113, 30, 23, 77, 90], [367, 45, 104, 20, 770, 832, 90], [368, 84, 118, 20, 642, 703, 90], [369, 8, 154, 20, 629, 681, 90], [370, 25, 146, 30, 337, 386, 90], [371, 178, 140, 10, 147, 217, 90], [372, 146, 103, 10, 938, 988, 90], [373, 40, 108, 30, 309, 367, 90], [374, 183, 148, 10, 95, 158, 90], [375, 99, 128, 20, 87, 155, 90], [376, 151, 35, 20, 988, 1040, 90], [377, 154, 27, 20, 607, 675, 90], [378, 42, 102, 30, 585, 647, 90], [379, 45, 46, 20, 506, 582, 90], [380, 144, 190, 10, 255, 306, 90], [381, 129, 38, 10, 223, 280, 90], [382, 199, 132, 10, 446, 509, 90], [383, 193, 111, 20, 708, 771, 90], [384, 172, 51, 10, 983, 1051, 90], [385, 188, 88, 20, 154, 203, 90], [386, 40, 49, 20, 413, 482, 90], [387, 52, 38, 30, 78, 138, 90], [388, 178, 54, 20, 429, 480, 90], [389, 181, 175, 30, 262, 320, 90], [390, 41, 187, 20, 262, 311, 90], [391, 49, 104, 30, 862, 928, 90], [392, 150, 99, 20, 300, 344, 90], [393, 106, 166, 10, 66, 114, 90], [394, 5, 73, 10, 342, 412, 90], [395, 148, 32, 10, 228, 304, 90], [396, 182, 154, 10, 645, 699, 90], [397, 116, 12, 20, 89, 155, 90], [398, 78, 115, 10, 278, 325, 90], [399, 121, 188, 20, 723, 775, 90], [400, 61, 50, 10, 397, 462, 90]]}
HOMBERGER_C1_2_1 = {'v_num': 50, 'capacity': 200, 'nodes': [[0, 70, 70, 0, 0, 1351, 0], [1, 33, 78, 20, 750, 809, 90], [2, 59, 52, 20, 553, 602, 90], [3, 10, 137, 30, 147, 219, 90], [4, 4, 28, 10, 616, 661, 90], [5, 25, 26, 20, 128, 179, 90], [6, 86, 37, 10, 478, 531, 90], [7, 1, 109, 10, 616, 680, 90], [8, 6, 135, 40, 351, 386, 90], [9, 32, 79, 20, 655, 721, 90], [10, 24, 26, 20, 219, 271, 90], [11, 86, 36, 20, 384, 443, 90], [12, 95, 35, 10, 196, 252, 90], [13, 63, 50, 10, 364, 416, 90], [14, 100, 106, 10, 567, 626, 90], [15, 99, 112, 20, 846, 911, 90], [16, 36, 135, 10, 598, 669, 90], [17, 57, 59, 10, 824, 890, 90], [18, 8, 124, 10, 231, 298, 90], [19, 85, 106, 20, 186, 253, 90], [20, 103, 69, 30, 33, 93, 90], [21, 109, 131, 20, 72, 141, 90], [22, 43, 140, 10, 410, 470, 90], [23, 115, 134, 30, 140, 199, 90], [24, 98, 70, 10, 467, 511, 90], [25, 112, 67, 10, 462, 534, 90], [26, 102, 104, 20, 201, 258, 90], [27, 93, 75, 30, 178, 238, 90], [28, 90, 104, 20, 845, 910, 90], [29, 127, 108, 10, 677, 743, 90], [30, 84, 99, 20, 32, 102, 90], [31, 113, 69, 20, 370, 440, 90], [32, 129, 9, 10, 84, 147, 90], [33, 18, 38, 30, 582, 638, 90], [34, 30, 27, 10, 772, 835, 90], [35, 25, 80, 20, 380, 440, 90], [36, 17, 37, 30, 493, 544, 90], [37, 32, 106, 10, 602, 657, 90], [38, 43, 135, 10, 215, 293, 90], [39, 61, 59, 20, 931, 971, 90], [40, 104, 106, 20, 390, 434, 90], [41, 109, 71, 20, 95, 163, 90], [42, 121, 110, 30, 870, 923, 90], [43, 61, 48, 20, 448, 517, 90], [44, 74, 99, 20, 176, 243, 90], [45, 89, 73, 10, 19, 94, 90], [46, 21, 25, 20, 405, 453, 90], [47, 99, 28, 30, 392, 442, 90], [48, 101, 96, 10, 101, 160, 90], [49, 9, 114, 20, 904, 954, 90], [50, 121, 112, 20, 221, 277, 90], [51, 137, 6, 10, 611, 678, 90], [52, 118, 131, 20, 782, 857, 90], [53, 34, 82, 10, 928, 1000, 90], [54, 4, 125, 30, 319, 398, 90], [55, 26, 105, 40, 115, 179, 90], [56, 35, 123, 20, 1130, 1198, 90], [57, 21, 48, 10, 53, 123, 90], [58, 21, 115, 10, 306, 376, 90], [59, 99, 108, 20, 952, 992, 90], [60, 1, 34, 20, 77, 132, 90], [61, 94, 70, 20, 556, 610, 90], [62, 74, 93, 20, 23, 66, 90], [63, 32, 128, 20, 1079, 1123, 90], [64, 94, 73, 10, 741, 791, 90], [65, 135, 3, 20, 250, 300, 90], [66, 97, 28, 20, 110, 170, 90], [67, 59, 56, 20, 745, 780, 90], [68, 80, 97, 10, 457, 518, 90], [69, 134, 31, 20, 508, 566, 90], [70, 103, 34, 30, 577, 636, 90], [71, 30, 79, 20, 561, 632, 90], [72, 4, 30, 40, 693, 768, 90], [73, 87, 39, 20, 35, 92, 90], [74, 90, 101, 10, 933, 1008, 90], [75, 119, 136, 30, 334, 384, 90], [76, 78, 92, 30, 555, 610, 90], [77, 110, 66, 10, 650, 710, 90], [78, 62, 58, 20, 173, 229, 90], [79, 127, 112, 20, 595, 636, 90], [80, 113, 71, 10, 286, 341, 90], [81, 34, 104, 10, 683, 760, 90], [82, 2, 28, 10, 148, 199, 90], [83, 17, 43, 10, 205, 279, 90], [84, 1, 24, 10, 333, 385, 90], [85, 112, 71, 20, 193, 252, 90], [86, 135, 0, 10, 331, 405, 90], [87, 125, 108, 20, 778, 825, 90], [88, 8, 138, 30, 234, 316, 90], [89, 103, 111, 20, 668, 719, 90], [90, 57, 53, 10, 641, 697, 90], [91, 98, 31, 20, 480, 541, 90], [92, 116, 132, 10, 870, 953, 90], [93, 28, 99, 10, 51, 93, 90], [94, 137, 3, 20, 522, 581, 90], [95, 29, 28, 10, 865, 925, 90], [96, 94, 105, 10, 656, 728, 90], [97, 92, 107, 30, 465, 532, 90], [98, 10, 134, 10, 629, 677, 90], [99, 34, 79, 10, 841, 902, 90], [100, 94, 72, 20, 647, 703, 90], [101, 35, 76, 10, 35, 91, 90], [102, 76, 99, 20, 273, 330, 90], [103, 127, 28, 30, 128, 195, 90], [104, 8, 119, 20, 142, 197, 90], [105, 102, 110, 10, 754, 814, 90], [106, 24, 24, 10, 583, 647, 90], [107, 64, 61, 20, 1011, 1077, 90], [108, 22, 38, 20, 950, 1003, 90], [109, 88, 72, 30, 925, 979, 90], [110, 107, 63, 30, 748, 800, 90], [111, 33, 131, 30, 979, 1037, 90], [112, 123, 112, 20, 405, 459, 90], [113, 67, 55, 10, 15, 62, 90], [114, 39, 128, 10, 65, 133, 90], [115, 136, 0, 30, 426, 491, 90], [116, 93, 36, 20, 98, 166, 90], [117, 7, 115, 10, 801, 872, 90], [118, 21, 44, 20, 115, 180, 90], [119, 28, 74, 20, 188, 260, 90], [120, 86, 102, 10, 93, 159, 90], [121, 19, 37, 20, 665, 738, 90], [122, 84, 36, 10, 568, 626, 90], [123, 118, 108, 10, 972, 1008, 90], [124, 132, 24, 10, 311, 384, 90], [125, 6, 25, 10, 516, 574, 90], [126, 28, 78, 10, 479, 529, 90], [127, 2, 132, 10, 526, 584, 90], [128, 22, 22, 10, 494, 550, 90], [129, 88, 35, 20, 285, 358, 90], [130, 94, 104, 10, 754, 813, 90], [131, 74, 96, 30, 80, 153, 90], [132, 0, 117, 30, 515, 585, 90], [133, 99, 96, 10, 38, 93, 90], [134, 119, 114, 20, 128, 185, 90], [135, 28, 107, 20, 206, 275, 90], [136, 133, 12, 10, 797, 874, 90], [137, 35, 102, 10, 877, 938, 90], [138, 36, 105, 20, 776, 852, 90], [139, 84, 39, 20, 659, 720, 90], [140, 34, 138, 20, 704, 749, 90], [141, 136, 29, 10, 406, 482, 90], [142, 33, 133, 20, 890, 941, 90], [143, 16, 39, 20, 314, 358, 90], [144, 32, 77, 20, 100, 157, 90], [145, 122, 131, 20, 608, 661, 90], [146, 77, 100, 20, 356, 429, 90], [147, 96, 26, 10, 202, 262, 90], [148, 127, 29, 20, 70, 141, 90], [149, 91, 95, 20, 1036, 1097, 90], [150, 42, 136, 10, 310, 381, 90], [151, 36, 132, 10, 509, 571, 90], [152, 103, 106, 30, 296, 347, 90], [153, 107, 105, 10, 472, 539, 90], [154, 96, 74, 10, 351, 437, 90], [155, 63, 57, 10, 79, 140, 90], [156, 122, 113, 20, 307, 374, 90], [157, 14, 131, 10, 712, 784, 90], [158, 30, 31, 20, 960, 1016, 90], [159, 40, 132, 20, 137, 182, 90], [160, 99, 26, 40, 287, 363, 90], [161, 10, 118, 10, 76, 144, 90], [162, 102, 60, 30, 840, 900, 90], [163, 120, 136, 10, 417, 482, 90], [164, 97, 29, 30, 49, 119, 90], [165, 19, 39, 10, 764, 823, 90], [166, 27, 77, 10, 284, 349, 90], [167, 30, 24, 20, 673, 748, 90], [168, 126, 112, 10, 507, 543, 90], [169, 105, 110, 20, 567, 634, 90], [170, 118, 114, 10, 65, 126, 90], [171, 135, 6, 30, 153, 210, 90], [172, 111, 66, 20, 561, 617, 90], [173, 95, 77, 10, 278, 325, 90], [174, 139, 10, 30, 723, 756, 90], [175, 61, 54, 10, 262, 329, 90], [176, 16, 38, 20, 387, 466, 90], [177, 16, 138, 10, 86, 142, 90], [178, 91, 78, 10, 88, 141, 90], [179, 91, 71, 20, 829, 890, 90], [180, 0, 27, 30, 241, 292, 90], [181, 6, 113, 20, 720, 768, 90], [182, 119, 139, 20, 234, 298, 90], [183, 35, 99, 20, 976, 1025, 90], [184, 31, 112, 20, 401, 481, 90], [185, 5, 119, 20, 425, 484, 90], [186, 3, 135, 20, 433, 491, 90], [187, 30, 136, 10, 792, 850, 90], [188, 20, 39, 10, 855, 913, 90], [189, 131, 11, 10, 895, 960, 90], [190, 28, 33, 20, 55, 128, 90], [191, 4, 23, 10, 414, 491, 90], [192, 87, 108, 20, 275, 350, 90], [193, 21, 26, 20, 311, 365, 90], [194, 121, 134, 20, 517, 567, 90], [195, 119, 130, 20, 692, 765, 90], [196, 91, 108, 10, 384, 430, 90], [197, 130, 27, 30, 229, 280, 90], [198, 101, 107, 10, 1038, 1090, 90], [199, 34, 108, 10, 506, 566, 90], [200, 131, 31, 20, 604, 657, 90]]}
SOLOMON_R101 = {'v_num': 25, 'capacity': 200, 'nodes': [[0, 35, 35, 0, 0, 230, 0], [1, 41, 49, 10, 161, 171, 10], [2, 35, 17, 7, 50, 60, 10], [3, 55, 45, 13, 116, 126, 10], [4, 55, 20, 19, 149, 159, 10], [5, 15, 30, 26, 34, 44, 10], [6, 25, 30, 3, 99, 109, 10], [7, 20, 50, 5, 81, 91, 10], [8, 10, 43, 9, 95, 105, 10], [9, 55, 60, 16, 97, 107, 10], [10, 30, 60, 16, 124, 134, 10], [11, 20, 65, 12, 67, 77, 10], [12, 50, 35, 19, 63, 73, 10], [13, 30, 25, 23, 159, 169, 10], [14, 15, 10, 20, 32, 42, 10], [15, 30, 5, 8, 61, 71, 10], [16, 10, 20, 19, 75, 85, 10], [17, 5, 30, 2, 157, 167, 10], [18, 20, 40, 12, 87, 97, 10], [19, 15, 60, 17, 76, 86, 10], [20, 45, 65, 9, 126, 136, 10], [21, 45, 20, 11, 62, 72, 10], [22, 45, 10, 18, 97, 107, 10], [23, 55, 5, 29, 68, 78, 10], [24, 65, 35, 3, 153, 163, 10], [25, 65, 20, 6, 172, 182, 10], [26, 45, 30, 17, 132, 142, 10], [27, 35, 40, 16, 37, 47, 10], [28, 41, 37, 16, 39, 49, 10], [29, 64, 42, 9, 63, 73, 10], [30, 40, 60, 21, 71, 81, 10], [31, 31, 52, 27, 50, 60, 10], [32, 35, 69, 23, 141, 151, 10], [33, 53, 52, 11, 37, 47, 10], [34, 65, 55, 14, 117, 127, 10], [35, 63, 65, 8, 143, 153, 10], [36, 2, 60, 5, 41, 51, 10], [37, 20, 20, 8, 134, 144, 10], [38, 5, 5, 16, 83, 93, 10], [39, 60, 12, 31, 44, 54, 10], [40, 40, 25, 9, 85, 95, 10], [41, 42, 7, 5, 97, 107, 10], [42, 24, 12, 5, 31, 41, 10], [43, 23, 3, 7, 132, 142, 10], [44, 11, 14, 18, 69, 79, 10], [45, 6, 38, 16, 32, 42, 10], [46, 2, 48, 1, 117, 127, 10], [47, 8, 56, 27, 51, 61, 10], [48, 13, 52, 36, 165, 175, 10], [49, 6, 68, 30, 108, 118, 10], [50, 47, 47, 13, 124, 134, 10], [51, 49, 58, 10, 88, 98, 10], [52, 27, 43, 9, 52, 62, 10], [53, 37, 31, 14, 95, 105, 10], [54, 57, 29, 18, 140, 150, 10], [55, 63, 23, 2, 136, 146, 10], [56, 53, 12, 6, 130, 140, 10], [57, 32, 12, 7, 101, 111, 10], [58, 36, 26, 18, 200, 210, 10], [59, 21, 24, 28, 18, 28, 10], [60, 17, 34, 3, 162, 172, 10], [61, 12, 24, 13, 76, 86, 10], [62, 24, 58, 19, 58, 68, 10], [63, 27, 69, 10, 34, 44, 10], [64, 15, 77, 9, 73, 83, 10], [65, 62, 77, 20, 51, 61, 10], [66, 49, 73, 25, 127, 137, 10], [67, 67, 5, 25, 83, 93, 10], [68, 56, 39, 36, 142, 152, 10], [69, 37, 47, 6, 50, 60, 10], [70, 37, 56, 5, 182, 192, 10], [71, 57, 68, 15, 77, 87, 10], [72, 47, 16, 25, 35, 45, 10], [73, 44, 17, 9, 78, 88, 10], [74, 46, 13, 8, 149, 159, 10], [75, 49, 11, 18, 69, 79, 10], [76, 49, 42, 13, 73, 83, 10], [77, 53, 43, 14, 179, 189, 10], [78, 61, 52, 3, 96, 106, 10], [79, 57, 48, 23, 92, 102, 10], [80, 56, 37, 6, 182, 192, 10], [81, 55, 54, 26, 94, 104, 10], [82, 15, 47, 16, 55, 65, 10], [83, 14, 37, 11, 44, 54, 10], [84, 11, 31, 7, 101, 111, 10], [85, 16, 22, 41, 91, 101, 10], [86, 4, 18, 35, 94, 104, 10], [87, 28, 18, 26, 93, 103, 10], [88, 26, 52, 9, 74, 84, 10], [89, 26, 35, 15, 176, 186, 10], [90, 31, 67, 3, 95, 105, 10], [91, 15, 19, 1, 160, 170, 10], [92, 22, 22, 2, 18, 28, 10], [93, 18, 24, 22, 188, 198, 10], [94, 26, 27, 27, 100, 110, 10], [95, 25, 24, 20, 39, 49, 10], [96, 22, 27, 11, 135, 145, 10], [97, 25, 21, 12, 133, 143, 10], [98, 19, 21, 10, 58, 68, 10], [99, 20, 26, 9, 83, 93, 10], [100, 18, 18, 17, 185, 195, 10]]}
SOLOMON_C101 = {'v_num': 25, 'capacity': 200, 'nodes': [[0, 40, 50, 0, 0, 1236, 0], [1, 45, 68, 10, 912, 967, 90], [2, 45, 70, 30, 825, 870, 90], [3, 42, 66, 10, 65, 146, 90], [4, 42, 68, 10, 727, 782, 90], [5, 42, 65, 10, 15, 67, 90], [6, 40, 69, 20, 621, 702, 90], [7, 40, 66, 20, 170, 225, 90], [8, 38, 68, 20, 255, 324, 90], [9, 38, 70, 10, 534, 605, 90], [10, 35, 66, 10, 357, 410, 90], [11, 35, 69, 10, 448, 505, 90], [12, 25, 85, 20, 652, 721, 90], [13, 22, 75, 30, 30, 92, 90], [14, 22, 85, 10, 567, 620, 90], [15, 20, 80, 40, 384, 429, 90], [16, 20, 85, 40, 475, 528, 90], [17, 18, 75, 20, 99, 148, 90], [18, 15, 75, 20, 179, 254, 90], [19, 15, 80, 10, 278, 345, 90], [20, 30, 50, 10, 10, 73, 90], [21, 30, 52, 20, 914, 965, 90], [22, 28, 52, 20, 812, 883, 90], [23, 28, 55, 10, 732, 777, 90], [24, 25, 50, 10, 65, 144, 90], [25, 25, 52, 40, 169, 224, 90]]}
SOLOMON_C201 = {'v_num': 25, 'capacity': 700, 'nodes': [[0, 40, 50, 0, 0, 3390, 0], [1, 52, 75, 10, 311, 471, 90], [2, 45, 70, 30, 213, 373, 90], [3, 62, 69, 10, 1167, 1327, 90], [4, 60, 66, 10, 1261, 1421, 90], [5, 42, 65, 10, 25, 185, 90], [6, 16, 42, 20, 497, 657, 90], [7, 58, 70, 20, 1073, 1233, 90], [8, 34, 60, 20, 2887, 3047, 90], [9, 28, 70, 10, 2601, 2761, 90], [10, 35, 66, 10, 2791, 2951, 90], [11, 35, 69, 10, 2698, 2858, 90], [12, 25, 85, 20, 2119, 2279, 90], [13, 22, 75, 30, 2405, 2565, 90], [14, 22, 85, 10, 2026, 2186, 90], [15, 20, 80, 40, 2216, 2376, 90], [16, 20, 85, 40, 1934, 2094, 90], [17, 18, 75, 20, 2311, 2471, 90], [18, 15, 75, 20, 1742, 1902, 90], [19, 15, 80, 10, 1837, 1997, 90], [20, 30, 50, 10, 10, 170, 90], [21, 30, 56, 20, 2983, 3143, 90], [22, 28, 52, 20, 22, 182, 90], [23, 14, 66, 10, 1643, 1803, 90], [24, 25, 50, 10, 116, 276, 90], [25, 22, 66, 40, 2504, 2664, 90], [26, 8, 62, 10, 1545, 1705, 90], [27, 23, 52, 10, 209, 369, 90], [28, 4, 55, 20, 1447, 1607, 90], [29, 20, 50, 10, 398, 558, 90], [30, 20, 55, 10, 303, 463, 90], [31, 10, 35, 20, 781, 941, 90], [32, 10, 40, 30, 593, 753, 90], [33, 8, 40, 40, 685, 845, 90], [34, 8, 45, 20, 1346, 1506, 90], [35, 5, 35, 10, 876, 1036, 90], [36, 5, 45, 10, 1253, 1413, 90], [37, 2, 40, 20, 971, 1131, 90], [38, 0, 40, 30, 1063, 1223, 90], [39, 0, 45, 20, 1158, 1318, 90], [40, 36, 18, 10, 1819, 1979, 90], [41, 35, 32, 10, 2758, 2918, 90], [42, 33, 32, 20, 2666, 2826, 90], [43, 33, 35, 10, 2573, 2733, 90], [44, 32, 20, 10, 1913, 2073, 90], [45, 30, 30, 10, 2105, 2265, 90], [46, 34, 25, 30, 2009, 2169, 90], [47, 30, 35, 10, 2480, 2640, 90], [48, 36, 40, 10, 2856, 3016, 90], [49, 48, 20, 10, 967, 1127, 90], [50, 26, 32, 10, 2292, 2452, 90]]}

names = ['HOMBERGEa_C1_4_1', 'HOMBERGER_C1_2_1', 'SOLOMON_R101', 'SOLOMON_C101', 'SOLOMON_C201']

#Variables computancionales 
customer = []           #numero del nodo correspondiente 
x_coord = []            #posicion en x
y_coord = []            #posicion en y 
d = []                  #demanda
a = []                  #ready time
b = []                  #due time
t = []                  #service time   

#nombre del archivo (cambiar para alternar entre instancias )
file_name = HOMBERGEa_C1_4_1
max_vehicle  = file_name['v_num']   #cantidad de vehiculos
q = file_name['capacity']           #capacidad de vehiculos 

#parseo de datos 
for i in file_name['nodes']:
    customer.append(i[0])
    x_coord.append(i[1])
    y_coord.append(i[2])
    d.append(i[3])
    a.append(i[4])
    b.append(i[5])
    t.append(i[6])

n_points = len(customer)

#Data frame para crear la matriz de distancia 
df = pd.DataFrame({
    'x': x_coord,
    'y': y_coord,
})

dist = pd.DataFrame(distance_matrix(df[['x', 'y']].values, df[['x', 'y']].values), index=df.index, columns=df.index).values

#PROBLEMA
problem = pulp.LpProblem('vrptw', pulp.LpMinimize)

#VARIABLES
x = pulp.LpVariable.dicts('x', ((i, j, k) for i in range(n_points) for j in range(n_points) for k in range (max_vehicle)), lowBound=0, upBound=1, cat='Binary')   
vehicles = pulp.LpVariable('vehicle', lowBound=0, upBound=max_vehicle, cat='Integer')                                                                       
h = pulp.LpVariable.dicts('h', (i for i in range(n_points) ),lowBound = a[0], upBound = b[0], cat = 'Integer') 
    
#FUNCION OBJETIVO 
problem += pulp.lpSum([dist[i][j] * x[i, j, k] for i in range(n_points) for j in range(n_points) for k in range(max_vehicle)])


#RESTRICCIONES 
#Constraint (2)
for i in range(n_points):
    for k in range (max_vehicle):
        problem += x[i, i, k] == 0 # impide loops 

#Constraint (7)    
for k in range(max_vehicle):
    problem += pulp.lpSum(d[i] * x[i, j, k] for i in range(n_points) for j in range(n_points))  <= q 

for i in range(1, n_points):
    problem += pulp.lpSum([x[i, j, k] for j in range(n_points) for k in range(max_vehicle)]) == 1 
#Constraint (3) & (4)
for i in range(1, n_points):
    problem += pulp.lpSum([x[j, i, k] for j in range(n_points) for k in range(max_vehicle)]) == 1 
    problem += pulp.lpSum([x[i, j, k] for j in range(n_points) for k in range(max_vehicle)]) == 1 

#Constraint (5) & (6)
problem += pulp.lpSum([x[i, 0, k] for i in range(n_points) for k in range(max_vehicle)]) == vehicles 
problem += pulp.lpSum([x[0, i, k] for i in range(n_points) for k in range(max_vehicle)]) == vehicles 

#Constraint (8)
M = 999_999 
for i in range(n_points):
    for j in range(n_points):
        for k in range(max_vehicle):
            if i != j and (i != 0 and j != 0):
                problem += h[i] + t[i] + dist[i][j]  <= h[j] + M * (1 - x[i,j,k]) 

#Constraint (9) & (10)
for i in range(n_points):   
    problem += h[i] >= a[i]
    problem += h[i] <= b[i]

#Constraint (11)
for i in range(n_points):
    for k in range(max_vehicle):                
        problem += pulp.lpSum(x[j,i,k] for j in range(n_points) if i != j) - pulp.lpSum(x[i,j,k] for j in range(n_points) if i != j) == 0



#Setear el solver 
solver = pulp.getSolver('PULP_CBC_CMD', timeLimit=1000) #120 seg.

#resolver el problema 
status = problem.solve(solver)

#imprimir el estatus 
status, pulp.LpStatus[status], pulp.value(problem.objective)


#Impresion para depurar 
"""for k in range(max_vehicle):
    for i in range(n_points):
        for j in range(n_points):
            if x[i,j,k] == 1:
                print(f"k: {k}, i: {i}, j: {j}")"""

#graficar 
graficar()


